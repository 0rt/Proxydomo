/* ===================================
　　　　　　　Proxydomo　　　　　　　　　　　　
 ==================================== */
 
■はじめに
このソフトはローカルで動くプロクシフィルタリングソフトです
作成にあたりオープンソースのProximodoを使って作られています。

■使い方
起動して　127.0.0.1:6060(プロクシポートに表示されてる数値)をプロクシとして指定すると
プロクシフィルタとして機能します。
詳しい使い方はProxomitronなどを参考にしてください。

$LSTの指定方法は listsフォルダ以下にあるテキストから拡張子を消したものです
※例: lists\Kill.txt -> $LST(Kill)

■既知のバグ
・一部実装していないコマンドがあります($ADDLISTなど)

■免責
作者(原著者＆改変者)は、このソフトによって生じた如何なる損害にも、
修正や更新も、責任を負わないこととします。
使用にあたっては、自己責任でお願いします。
 
何かあれば下記のURLにあるメールフォームにお願いします。
http://www31.atwiki.jp/lafe/pages/33.html
 
■著作権表示
Copyright (C) 2004 Antony BOUCHER
Copyright (C) 2013 amate
 
 画像の一部に「VS2010ImageLibrary」の一部を使用しています。
 
■ビルドについて
ビルドには boost(1.54~)と zlib と WTL と ICU と GnuTLS が必要なのでそれぞれ用意してください。

◆boost
http://www.boost.org/

◆zlib
http://zlib.net/

◆ICU
http://site.icu-project.org/

◆WTL
http://sourceforge.net/projects/wtl/

◆GnuTLS
http://www.gnutls.org/

□コンパイル済みdll
zlibとGnuTLSのコンパイル済みdllを下記のURLで公開しています
http://1drv.ms/1vqvcaG


zlibのヘッダの場所
$(SolutionDir)zlib\x86\include
$(SolutionDir)zlib\x64\include
zlibのライブラリの場所
$(SolutionDir)zlib\x86\lib
$(SolutionDir)zlib\x64\lib
を以下の場所にすればとくに設定はいらないはずです
これ以外の場所にzlibを置いているなら適当にzlibbuffer.h/cppを修正してください

ICU は
$(SolutionDir)icu\Win32 or Win64 フォルダに include と lib があればコンパイル通るようになっています

boost::shared_mutexを使用するのでboost::threadのライブラリが必要になります
 Boostライブラリのビルド方法
 https://sites.google.com/site/boostjp/howtobuild
コマンドライン
// x86
b2.exe install -j 2 --prefix=lib toolset=msvc-12.0 runtime-link=static --with-thread --with-date_time
// x64
b2.exe install -j 2 --prefix=lib64 toolset=msvc-12.0 runtime-link=static address-model=64 --with-thread --with-date_time


■GnuTLS (64bit版)dllの作り方

http://www.devlog.alt-area.org/?p=2802
このサイトを参考に MinGW64 + MSYS の環境を作る

※注意
Strawberry Perlのバージョンは"Strawberry Perl 5.18.4.1"をインストールしてください
もしくは
C:\Strawberry\perl\bin
フォルダにある"pkg-config"、"pkg-config.bat"ファイルをリネームしてください

// x64 ==============================================================
#gmp6.0.0a build
./configure --build=x86_64-w64-mingw32 --enable-shared --disable-static
make
make install

#nettle2.7.1 build
./configure --build=x86_64-w64-mingw32 --with-lib-path=/local/lib --with-include-path=/local/include
make
make install

#gnutls3.3.13 build
./configure --build=x86_64-w64-mingw32 --disable-guile --disable-nls --without-zlib PKG_CONFIG_PATH=/local/lib/pkgconfig LDFLAGS=-L/local/lib --disable-cxx --disable-openssl-compatibility --disable-doc --disable-heartbeat-support --disable-rsa-export
make
make install

// x86 =================================================================
#gmp6.0.0a build
./configure --build=i686-w64-mingw32 --enable-shared --disable-static
make
make install

#nettle2.7.1 build
./configure --build=i686-w64-mingw32 --with-lib-path=/local/lib --with-include-path=/local/include --disable-openssl --disable-documentation
make
make install

#gnutls3.3.13 build
./configure --build=i686-w64-mingw32 --disable-guile --disable-nls --without-zlib PKG_CONFIG_PATH=/local/lib/pkgconfig LDFLAGS=-L/local/lib --disable-cxx --disable-openssl-compatibility --disable-doc --disable-heartbeat-support --disable-rsa-export
make
make install

// ================================================================
msys\local
以下に生成物ができる

http://einguste.hatenablog.com/entry/2014/01/29/002601
lib/gnutls.pc(.in)の修正が必要かもしれない


"VS2013 x64 Native Tools コマンド プロンプト"から
lib /def:libgnutls-28.def
で libgnutls-28.libを作成しリンクする必要があります

そのままではリンクエラーが出るので
gnutls.hの 1470行目
extern   gnutls_free_function gnutls_free;
を
__declspec(dllimport)  gnutls_free_function gnutls_free;
に変更する必要があります
